// <auto-generated />
using System;
using BookStore.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookStore.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241028195243_thirdMigration")]
    partial class thirdMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookStore.API.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDay")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateOnly(1975, 12, 19),
                            Name = "Brandon Sanderson"
                        });
                });

            modelBuilder.Entity("BookStore.API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int?>("GenreId")
                        .HasColumnType("integer");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("PublishedDate")
                        .HasColumnType("date");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("OrderId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            GenreId = 2,
                            Isbn = "0765326353",
                            Price = 33.33m,
                            PublishedDate = new DateOnly(2010, 8, 31),
                            Stock = 10,
                            Synopsis = "\r\nEl camino de los reyes es el primer volumen de «El Archivo de las Tormentas», el resultado de más de una década de construcción y escritura de universos, convertido en una obra maestra de la fantasía contemporánea en diez volúmenes. Con ella, Brandon Sanderson se postula como el autor del género que más lectores está ganando en todo el mundo.\r\n\r\nAnhelo los días previos a la Última Desolación.\r\n\r\nLos días en que los Heraldos nos abandonaron y los Caballeros Radiantes se giraron en nuestra contra. Un tiempo en que aún había magia en el mundo y honor en el corazón de los hombres.\r\n\r\nEl mundo fue nuestro, pero lo perdimos. Probablemente no hay nada más estimulante para las almas de los hombres que la victoria.\r\n\r\n¿O tal vez fue la victoria una ilusión durante todo ese tiempo? ¿Comprendieron nuestros enemigos que cuanto más duramente luchaban, más resistíamos nosotros? Quizá vieron que el fuego y el martillo tan solo producían mejores espadas. Pero ignoraron el acero durante el tiempo suficiente para oxidarse.\r\n\r\nHay cuatro personas a las que observamos. La primera es el médico, quien dejó de curar para convertirse en soldado durante la guerra más brutal de nuestro tiempo. La segunda es el asesino, un homicida que llora siempre que mata. La tercera es la mentirosa, una joven que viste un manto de erudita sobre un corazón de ladrona. Por último está el alto príncipe, un guerrero que mira al pasado mientras languidece su sed de guerra.\r\n\r\nEl mundo puede cambiar. La potenciación y el uso de las esquirlas pueden aparecer de nuevo, la magia de los días pasados puede volver a ser nuestra. Esas cuatro personas son la clave.\r\n\r\nUna de ellas nos redimirá. Y una de ellas nos destruirá.",
                            Title = "El camino de los reyes"
                        });
                });

            modelBuilder.Entity("BookStore.API.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Explora futuros hipotéticos, avances científicos y tecnológicos, y mundos alternativos, abordando temas de impacto en la humanidad y su relación con el universo.",
                            Name = "Ciencia Ficción"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Historias en mundos mágicos donde héroes enfrentan misiones de gran envergadura contra fuerzas oscuras.",
                            Name = "Fantasía Épica"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Representa futuros sombríos y autoritarios en los que la sociedad ha colapsado o es gobernada de manera opresiva.",
                            Name = "Distopía"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Narrativas ambientadas en el espacio, con viajes intergalácticos, planetas desconocidos y combates entre especies alienígenas.",
                            Name = "Aventura Espacial"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Retrata un futuro urbano decadente donde la alta tecnología se mezcla con el bajo nivel de vida, explorando temas de identidad y control corporativo.",
                            Name = "Ciberpunk"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Fusiona la estética victoriana y tecnología a vapor en un mundo alternativo con invenciones retrofuturistas y aventuras rebeldes.",
                            Name = "Steampunk"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Explora terrores de origen extraterrestre y fuerzas cósmicas que superan la comprensión humana.",
                            Name = "Horror Cósmico"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Relatos que reinterpretan mitos antiguos y leyendas en un contexto contemporáneo o fantástico.",
                            Name = "Mitología Moderna"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Historias de supervivencia en mundos desmoronados, llenos de zombis u otras amenazas apocalípticas.",
                            Name = "Zombis y Apocalipsis"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Historias donde los personajes viven en mundos de rol o videojuegos, experimentando niveles, habilidades y mecánicas típicas de juegos de rol.",
                            Name = "LitRPG"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Historias de personajes con habilidades extraordinarias que protegen al mundo de amenazas y villanos.",
                            Name = "Superhéroes"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Narrativas oscuras y llenas de misterio, a menudo centradas en crímenes y antihéroes.",
                            Name = "Cómic Noir"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Mundos donde la magia y lo sobrenatural conviven con la vida cotidiana en ciudades modernas.",
                            Name = "Fantasía Urbana"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Explora futuros sombríos y tecnológicos con sociedades autoritarias y temas de rebelión.",
                            Name = "Ciencia Ficción Distópica"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Historias de acción y aventuras orientadas a un público juvenil, a menudo con personajes en constante superación.",
                            Name = "Shonen"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Narrativas enfocadas en romance y relaciones emocionales, orientadas a un público femenino joven.",
                            Name = "Shojo"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Historias maduras y complejas, a menudo de acción, horror o temas psicológicos, dirigidas a un público adulto.",
                            Name = "Seinen"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Relatos donde los protagonistas son transportados a mundos paralelos o fantásticos, enfrentando desafíos y nuevas vidas.",
                            Name = "Isekai"
                        });
                });

            modelBuilder.Entity("BookStore.API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BookStore.API.Models.Book", b =>
                {
                    b.HasOne("BookStore.API.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("BookStore.API.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.HasOne("BookStore.API.Models.Order", null)
                        .WithMany("Books")
                        .HasForeignKey("OrderId");

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookStore.API.Models.Order", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
